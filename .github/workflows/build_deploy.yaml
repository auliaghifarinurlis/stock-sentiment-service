name: CI/CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      version:
        description: "Image version"
        required: true

env:
  REGISTRY: "registry.digitalocean.com/finalassignment"
  IMAGE_NAME: "fastapi-sentiment"

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 300
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (optional for advanced builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${GITHUB_SHA::7} .

      # Step 4: Save Docker Image as Artifact
      - name: Save Docker Image as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: |
            ./docker-image-info.txt

      # Optional: Capture Docker Image Details
      - name: Capture Docker Image Details
        run: |
          docker images $REGISTRY/$IMAGE_NAME:${GITHUB_SHA::7} > docker-image-info.txt

  push:
    name: Push Docker Image to Registry
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 300
    steps:
      # Step 1: Download Docker Image Artifact (if needed)
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: ./artifact

      # Step 2: Log in to DigitalOcean Container Registry
      - name: Log in to DigitalOcean Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: doctl
          password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Step 3: Push Docker Image with Retry Logic
      - name: Push Docker Image with Retries
        run: |
          for i in {1..5}; do
            docker push $REGISTRY/$IMAGE_NAME:${GITHUB_SHA::7} && break
            echo "Push failed, retrying in 10 seconds..."
            sleep 10
          done

      # Optional: Verify Docker Push
      - name: Verify Docker Push
        run: docker images $REGISTRY/$IMAGE_NAME:${GITHUB_SHA::7}

  deploy:
    name: Deploy to DigitalOcean Droplet
    runs-on: ubuntu-latest
    needs: push
    timeout-minutes: 300
    steps:
      # Step 1: Deploy via SSH using Appleboy's SSH Action
      - name: Deploy to DigitalOcean Droplet via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          # List of environment variables to pass to the remote server
          envs: IMAGE_NAME,REGISTRY,DIGITALOCEAN_ACCESS_TOKEN,GITHUB_SHA
          script: |
            # Exit immediately if a command exits with a non-zero status
            set -e

            echo "Logging into DigitalOcean Container Registry..."
            echo $DIGITALOCEAN_ACCESS_TOKEN | docker login registry.digitalocean.com -u doctl --password-stdin

            echo "Stopping existing container if it exists..."
            docker stop $IMAGE_NAME || true

            echo "Removing existing container if it exists..."
            docker rm $IMAGE_NAME || true

            echo "Pulling the latest Docker image..."
            docker pull $REGISTRY/$IMAGE_NAME:${GITHUB_SHA::7}

            echo "Running the new container..."
            docker run -d \
              --restart always \
              --name $IMAGE_NAME \
              -p 4001:4001 \
              $REGISTRY/$IMAGE_NAME:${GITHUB_SHA::7}

            echo "Deployment completed successfully."
