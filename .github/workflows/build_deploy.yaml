name: CI

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "Image version"
        required: true

# 2
env:
  REGISTRY: "registry.digitalocean.com/finalassignment"
  IMAGE_NAME: "fastapi-sentiment"

# 3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    timeout-minutes: 300
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t ${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA::7} .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 60000

      - name: Remove all old images
        run: |
          if [ ! -z "$(doctl registry repository list | grep "${IMAGE_NAME}")" ]; then
            TAGS=$(doctl registry repository list-tags "${IMAGE_NAME}" | grep -o "sha.*")
            for TAG in $TAGS; do
              doctl registry repository delete-manifest "${IMAGE_NAME}" "${TAG}" --force
            done
          else
            echo "No repository"
          fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push ${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA::7}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    timeout-minutes: 300
    steps:
      - name: Deploy to DigitalOcean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA
          script: |
            # Login to registry
            docker login -u "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" -p "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" registry.digitalocean.com
            # Stop running container
            docker stop "${IMAGE_NAME}" || true
            # Remove old container
            docker rm "${IMAGE_NAME}" || true
            # Run a new container from a new image
            docker run -d \
              --restart always \
              --name "${IMAGE_NAME}" \
              -p 4001:4001 \
              "${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA::7}"
